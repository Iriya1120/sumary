<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        // 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
        // 输入：nums = [-2,1,-3,4,-1,2,1,-5,4]
        // 输出：6
        // 解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。


        // 动态规划
        function maxSubArray(nums) {
            const dp = [...nums];
            for (let i = 1; i < nums.length; i++) {
                // 要么自成一段，要么和前面子数组合并
                dp[i] = Math.max(nums[i], dp[i - 1] + nums[i]);
            }
            return Math.max(...dp);
        };


        // 改进的动态规划
        function _maxSubArray(nums) {
            let pre = 0;
            let dp = nums[0];
            for (let i = 0; i < nums.length; i++) {
                pre = Math.max(pre + nums[i], nums[i]);
                dp = Math.max(dp, pre)
            }

            return dp

        }

        console.log(_maxSubArray([10,12,15,20,9,16,19,23]));
    </script>
</body>
</html>